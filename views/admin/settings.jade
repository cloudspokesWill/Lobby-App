extends ../layout

block scripts
  include ../includes/js/jquery
  include ../includes/js/crypto

  script.

    // for hooking up ajax calls with text fields
    function hook_ajax_button(field, url, key, callback) {
      $('#' + field + ' img').css('visibility', 'hidden');
      $('#' + field + ' :button').click(function() {
        if (callback) {
          if (callback() == false) {
            return;
          }
        }

        $('#' + field + ' img').css('visibility', 'visible');

        var data = {};
        data[key] = $('#' + field).find('[type=text], [type=password]').val();
        $.post(url, data, function() {
            $('#' + field + ' img').css('visibility', 'hidden');
          }
        );
      });
    }

    $(document).ready(function() {

      $('.setting, form').css('margin-bottom', '30px');
      $('.setting, form').children().css('margin', '5px');

      hook_ajax_button('company_name', 'admin_update_name', 'new_name');
      hook_ajax_button('company_location', 'admin_update_location', 'new_location');

      $('#company_logo img').css('visibility', 'hidden');
      $('#company_logo > [type=file]').change(function() {
        var file = this.files[0];
        if (file.size > 1024000 || file.type != 'image/png') {
          alert('Please upload a PNG file less than 1MB.');
          $(this).val(''); // clear file path
        }
      });
      $('#company_logo > [type=button]').click(function() {
        if ($('#company_logo > [type=file]')[0].files.length == 0) {
          return;
        }

        $('#company_logo img').css('visibility', 'visible');
        var file = $('#company_logo > [type=file]')[0].files[0];
        $.ajax({
          url: "admin_update_logo",
          type: "POST",
          data: file,
          processData: false,
          contentType: file.type,
          success: function() {
            $('#company_logo img').css('visibility', 'hidden');
            $('img.logo').attr("src", "images/logo.png?" + (new Date()).getTime());
          }
        });
      });

      hook_ajax_button('user_timeout', 'timeout', 'user_timeout');
      $('#user_timeout > [type=text]').val('!{user_timeout}');

      $('#auto_signout > [type=checkbox]').prop('checked', !{auto_signout_enabled});
      $('#auto_signout > [type=text]').val('!{auto_signout_time}');
      $('#auto_signout img').css('visibility', 'hidden');
      $('#auto_signout :button').click(function() {
        var signout_enabled = $('#auto_signout > [type=checkbox]').prop('checked');
        var signout_time = $('#auto_signout > [type=text]').val();
        if (signout_enabled && !signout_time) {
          alert('Auto signout requires non-empty signout time, please type in the signout time.');
        } else {  // update
            $('#auto_signout img').css('visibility', 'visible');
            var data = {
              'signout_enabled': signout_enabled
              , 'signout_time': signout_time
            };
            $.post('admin_auto_signout', data, function() {
                $('#auto_signout img').css('visibility', 'hidden');
              }
            );
        }
      });

      $('#report > [name=dayandtime]').val('!{report_day_time}');
      $('#report > [name=emails]').val('!{report_emails}');
      $('#report > [name=numofdays]').val('!{report_num_days}');
      $('#report img').css('visibility', 'hidden');
      $('#report :button').click(function() {
        var dayandtime = $('#report > [name=dayandtime]').val();
        var emails = $('#report > [name=emails]').val();
        var numofdays = $('#report > [name=numofdays]').val();
        if (!dayandtime && !emails) {
          alert('Report scheduling requires both day-and-time and email list.');
        } else {  // update
            $('#report img').css('visibility', 'visible');
            var data = {
              'dayandtime': dayandtime
              , 'emails': emails
              , 'numofdays': numofdays
            };
            $.post('admin_update_report', data, function() {
                $('#report img').css('visibility', 'hidden');
              }
            );
        }
      });

      $('#ds_env select').val('!{ds_env}'); // select

      $('#ds_test img').css('visibility', 'hidden');
      $('#ds_test :button').click(function() {
        $.post('docusign_test',
          { env: $('#ds_env select').val()
          , name: $('#account_name[type=text]').val()
          , password: $('#account_password[type=password]').val()
          , key: $('#integrator_key[type=text]').val()
        }, function(is_valid) {
          $('#ds_test img').css('visibility', 'visible');
          if (is_valid) {
            $('#ds_test img').attr('src', 'images/200px-green_checkmark.png');
          } else {
            $('#ds_test img').attr('src', 'images/200px-red_x.png');
          }
        });
      });

      $('#ds_update img').css('visibility', 'hidden');
      $('#ds_update :button').click(function() {
        $('#ds_update img').css('visibility', 'visible');

        var data =
          { name: $('#account_name[type=text]').val()
          , password: $('#account_password[type=password]').val()
          , key: $('#integrator_key[type=text]').val()
          , env: $('#ds_env select').val()
        };
        $.post('docusign', data, function() {
            $('#ds_update img').css('visibility', 'hidden');
          }
        );
      });

      $('#password_error').css('color', 'red');
      hook_ajax_button('admin_password', 'admin_update_admin_password', 'admin_password', function() {
        if ($('#admin_password > [type=password]:eq(0)').val() == '') {
          $('#password_error').text('Please enter a password for the administrator.');
          return false;
        }
        if ($('#admin_password > [type=password]:eq(1)').val() == '') {
          $('#password_error').text('Please enter a matching password.');
          return false;
        }

        var hash1 = CryptoJS.SHA256($('#admin_password > [type=password]:eq(0)').val()).toString();
        var hash2 = CryptoJS.SHA256($('#admin_password > [type=password]:eq(1)').val()).toString();

        if (hash1 != hash2) {
            $('#password_error').text('The passwords you entered do not match.');
            return false;
        }
        $('#password_error').text('');

        $('#admin_password > [type=password]').val(hash1);
        return true;
      });
    });

block content
  include ../includes/logo

  .wrap
    h1 Change App Settings

    .setting#company_name
      label Company name
      br
      input(type="text", size="50", autocomplete="off", value='#{companyName}')
      input(type="button", value="Update")
      img(src="images/ajax-loader.gif")

    .setting#company_location
      label Company location
      br
      input(type="text", size="50", autocomplete="off", value='#{companyLocation}')
      input(type="button", value="Update")
      img(src="images/ajax-loader.gif")

    form#company_logo(enctype="multipart/form-data")
      label Company logo (path to the new image; must be a PNG file)
      br
      input(type="file", size="40")
      input(type="button", value="Update")
      img(src="images/ajax-loader.gif")

    .setting#user_timeout
      label Idle time period for user flow (in seconds)
      br
      input(type="text", size="50", autocomplete="off")
      input(type="button", value="Update")
      img(src="images/ajax-loader.gif")

    .setting#auto_signout
      label Schedule time for updating auto signout (format: hh:mm a, separate by comma)
      br
      input(type='checkbox')
      label Sign all Visitors out at:
      input(type='text', size='20', autocomplete="off")
      input(type="button", value="Update")
      img(src="images/ajax-loader.gif")

    .setting#report
      label Day and time to send report (format: day hh:mm a, day is a day of week 0 - 6 or Sun - Sat)
      input(type='text', name='dayandtime', size='50', autocomplete="off")
      label Email list to send report separated by comma
      input(type='text', name='emails', size='50', autocomplete="off")
      label Number of past days to report
      input(type='text', name='numofdays', size='10', autocomplete="off")
      input(type="button", value="Update")
      img(src="images/ajax-loader.gif")

    hr

    .setting#ds_env
      label DocuSign environment
      br
      select
        option(value="www") Production
        option(value="demo") Demo
        option(value="preview") Preview
        option(value="wwwstage") Stage
        option(value="test") Test
        option(value="test1") Test 1
        option(value="test2") Test 2

    .setting#account_name
      label DocuSign account name
      br
      input#account_name(type="text", size="50", autocomplete="off", value='#{ds_account_name}')

    .setting#account_password
      label DocuSign account password
      br
      input#account_password(type="password", size="50", autocomplete="off", value='#{ds_account_password}')

    .setting#integrator_key
      label DocuSign integrator key
      br
      input#integrator_key(type="text", size="50", autocomplete="off", value='#{ds_integrator_key}')

    .setting#ds_test
      input(type="button", value="Test DocuSign connection")
      img(width="16px", height="16px")

    .setting#ds_update
      input(type="button", value="Update DocuSign account information")
      img(src="images/ajax-loader.gif")

    hr

    .setting#admin_password
      label Reset Lobby App administrator password
      br
      input(type="password", size="50", autocomplete="off")
      br
      input(type="password", size="50", autocomplete="off")
      input(type="button", value="Update")
      img(src="images/ajax-loader.gif")
      br
      label#password_error

  include ../includes/admin_back

